<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="avicit.assets.device.usertreejson.dao.UserTreeJsonDao">

	<resultMap id="UserTreeJsonDTOMap" type="avicit.assets.device.usertreejson.dto.UserTreeJsonDTO">
		<result property="id" column="ID" jdbcType="VARCHAR" />
		<result property="belongObjectId" column="BELONG_OBJECT_ID" jdbcType="VARCHAR" />
		<result property="treeName" column="TREE_NAME" jdbcType="VARCHAR" />
		<result property="treeJson" column="TREE_JSON" jdbcType="VARCHAR" />
		<result property="objectType" column="OBJECT_TYPE" jdbcType="VARCHAR" />
	</resultMap>
	
	<resultMap id="TreeJsonDTOMap" type="avicit.assets.device.usertreejson.dto.TreeJsonDTO">
		<result property="id" column="ID" jdbcType="VARCHAR" />
		<result property="belongObjectId" column="BELONG_OBJECT_ID" jdbcType="VARCHAR" />
		<result property="treeName" column="TREE_NAME" jdbcType="VARCHAR" />
		<result property="treeJson" column="TREE_JSON" jdbcType="VARCHAR" />
		<result property="objectType" column="OBJECT_TYPE" jdbcType="VARCHAR" />
	</resultMap>
	
	<!-- 通过所属对象的id、所属对象的类型、树对象的表名获取TreeJson -->
	<select id="getTreeJson" parameterType="java.util.Map" resultMap="UserTreeJsonDTOMap">
		select
			t1.id ,
			t1.belong_object_id ,
			t1.tree_name ,
			t1.tree_json ,
			t1.object_type
		from user_tree_json t1
		<where>
			<if test="objectId != null and objectId != ''">
				and t1.BELONG_OBJECT_ID = #{objectId}
			</if>
			<if test="treeName != null and treeName != ''">
				and t1.TREE_NAME = #{treeName}
			</if>
			<if test="obejctType != null and obejctType != ''">
				and t1.OBJECT_TYPE = #{obejctType}
			</if>
		</where>
	</select>

	<!-- 分页查询 USER_TREE_JSON -->
	<select id="searchUserTreeJsonByPage" parameterType="java.util.Map" resultMap="UserTreeJsonDTOMap">
		select
			t1.id ,
			t1.belong_object_id ,
			t1.tree_name ,
			t1.tree_json ,
			t1.object_type
		from user_tree_json t1
		<where>
			<if test="bean != null">
				<if test="bean.id != null and bean.id != ''">
					and t1.ID =#{bean.id}
				</if>
				<if test="bean.belongObjectId != null and bean.belongObjectId != ''">
					and t1.BELONG_OBJECT_ID like
					concat(concat('%',#{bean.belongObjectId}),'%')
				</if>
				<if test="bean.treeName != null and bean.treeName != ''">
					and t1.TREE_NAME like concat(concat('%',#{bean.treeName}),'%')
				</if>
				<if test="bean.treeJson != null and bean.treeJson != ''">
					and t1.TREE_JSON like concat(concat('%',#{bean.treeJson}),'%')
				</if>
				<if test="bean.objectType != null and bean.objectType != ''">
					and t1.OBJECT_TYPE like concat(concat('%',#{bean.objectType}),'%')
				</if>
			</if>
		</where>
		<choose>
			<when test="pOrderBy != null and pOrderBy != ''">
				order by ${pOrderBy}
			</when>
			<otherwise>
				order by t1.creation_date desc
			</otherwise>
		</choose>
	</select>

	<!-- 分页查询 OrUSER_TREE_JSON -->
	<select id="searchUserTreeJsonByPageOr" parameterType="java.util.Map" resultMap="UserTreeJsonDTOMap">
		select
			t1.id ,
			t1.belong_object_id ,
			t1.tree_name ,
			t1.tree_json ,
			t1.object_type
		from user_tree_json t1
		<where>
			<if test="bean != null">
				<trim prefix="(" suffix=")" prefixOverrides="or">
					<if test="bean.id != null and bean.id != ''">
						or t1.ID =#{bean.id}
					</if>
					<if test="bean.belongObjectId != null and bean.belongObjectId != ''">
						or t1.BELONG_OBJECT_ID like
						concat(concat('%',#{bean.belongObjectId}),'%')
					</if>
					<if test="bean.treeName != null and bean.treeName != ''">
						or t1.TREE_NAME like concat(concat('%',#{bean.treeName}),'%')
					</if>
					<if test="bean.treeJson != null and bean.treeJson != ''">
						or t1.TREE_JSON like concat(concat('%',#{bean.treeJson}),'%')
					</if>
					<if test="bean.objectType != null and bean.objectType != ''">
						or t1.OBJECT_TYPE like concat(concat('%',#{bean.objectType}),'%')
					</if>
				</trim>
			</if>
		</where>
		<choose>
			<when test="pOrderBy != null and pOrderBy != ''">
				order by ${pOrderBy}
			</when>
			<otherwise>
				order by t1.creation_date desc
			</otherwise>
		</choose>
	</select>

	<!-- 查询列表 USER_TREE_JSON -->
	<select id="searchUserTreeJson" parameterType="java.util.Map" resultMap="UserTreeJsonDTOMap">
		select
			t1.id ,
			t1.belong_object_id ,
			t1.tree_name ,
			t1.tree_json ,
			t1.object_type
		from user_tree_json t1
		<where>
			<if test="id != null and id != ''">
				and t1.ID =#{id}
			</if>
			<if test="belongObjectId != null and belongObjectId != ''">
				and t1.BELONG_OBJECT_ID =#{belongObjectId}
			</if>
			<if test="treeName != null and treeName != ''">
				and t1.TREE_NAME =#{treeName}
			</if>
			<if test="treeJson != null and treeJson != ''">
				and t1.TREE_JSON =#{treeJson}
			</if>
			<if test="objectType != null and objectType != ''">
				and t1.OBJECT_TYPE =#{objectType}
			</if>
		</where>
	</select>

	<!-- 主键查询对象 USER_TREE_JSON -->
	<select id="findUserTreeJsonById" parameterType="java.util.Map" resultMap="UserTreeJsonDTOMap">
		select
			t1.id ,
			t1.belong_object_id ,
			t1.tree_name ,
			t1.tree_json ,
			t1.object_type
			from user_tree_json t1
		where t1.id = #{id}
	</select>
	
	<!-- 新增对象 USER_TREE_JSON -->
	<insert id="insertUserTreeJson" parameterType="avicit.assets.device.usertreejson.dto.UserTreeJsonDTO">
		insert into user_tree_json
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="belongObjectId != null">
				belong_object_id,
			</if>
			<if test="treeName != null">
				tree_name,
			</if>
			<if test="treeJson != null">
				tree_json,
			</if>
			<if test="objectType != null">
				object_type,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="belongObjectId != null">
				#{belongObjectId,jdbcType=VARCHAR},
			</if>
			<if test="treeName != null">
				#{treeName,jdbcType=VARCHAR},
			</if>
			<if test="treeJson != null">
				#{treeJson,jdbcType=VARCHAR},
			</if>
			<if test="objectType != null">
				#{objectType,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	
	<!-- 批量新增对象 USER_TREE_JSON -->
	<insert id="insertUserTreeJsonList" parameterType="java.util.List">
		insert into user_tree_json(id, belong_object_id, tree_name, tree_json, object_type)
		<foreach collection="list" item="item" index="index" open="(" separator="union all" close=")" >
			select
				#{item.id,jdbcType=VARCHAR},
				#{item.belongObjectId,jdbcType=VARCHAR},
				#{item.treeName,jdbcType=VARCHAR},
				#{item.treeJson,jdbcType=VARCHAR},
				#{item.objectType,jdbcType=VARCHAR}
			from dual
		</foreach>
	</insert>
	
	<!-- 更新对象 USER_TREE_JSON -->
	<update id="updateUserTreeJsonSensitive" parameterType="avicit.assets.device.usertreejson.dto.UserTreeJsonDTO">
		update user_tree_json
		<set>
			<if test="id != null">
				id =#{id,jdbcType=VARCHAR},
			</if>
			<if test="belongObjectId != null">
				belong_object_id =#{belongObjectId,jdbcType=VARCHAR},
			</if>
			<if test="treeName != null">
				tree_name =#{treeName,jdbcType=VARCHAR},
			</if>
			<if test="treeJson != null">
				tree_json =#{treeJson,jdbcType=VARCHAR},
			</if>
			<if test="objectType != null">
				object_type =#{objectType,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id} and version =#{version}
	</update>
	
	<!-- 更新对象 USER_TREE_JSON -->
	<update id="updateUserTreeJsonAll" parameterType="avicit.assets.device.usertreejson.dto.UserTreeJsonDTO">
		update user_tree_json
		set
			id = #{id,jdbcType=VARCHAR},
			belong_object_id = #{belongObjectId,jdbcType=VARCHAR},
			tree_name = #{treeName,jdbcType=VARCHAR},
			tree_json = #{treeJson,jdbcType=VARCHAR},
			object_type = #{objectType,jdbcType=VARCHAR}
		where 
			id = #{id}
	</update>
	
	<!-- 批量更新对象 USER_TREE_JSON -->
	<update id="updateUserTreeJsonList" parameterType="java.util.List">
		<foreach collection="dtoList" item="item" index="index" open="begin" separator="" close="end;">
			update user_tree_json
			set
				id =#{item.id,jdbcType=VARCHAR},
				belong_object_id = #{item.belongObjectId,jdbcType=VARCHAR},
				tree_name = #{item.treeName,jdbcType=VARCHAR},
				tree_json = #{item.treeJson,jdbcType=VARCHAR},
				object_type = #{item.objectType,jdbcType=VARCHAR}
			where 
				id = #{item.id} and version =#{item.version};
		</foreach>
	</update>
	
	<!-- 主键删除 USER_TREE_JSON -->
	<delete id="deleteUserTreeJsonById" parameterType="java.lang.String">
		delete from user_tree_json where id = #{id}
	</delete>
	
	<!-- 批量主键删除 USER_TREE_JSON -->
	<delete id="deleteUserTreeJsonList" parameterType="java.util.List">
		delete from user_tree_json t1
		<where>
			<foreach item="idItem" collection="list" open="(" separator="or" close=")">
				t1.id = #{idItem}
			</foreach>
		</where>
	</delete>
</mapper>